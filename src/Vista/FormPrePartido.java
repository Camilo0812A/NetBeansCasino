package Vista;

import Negocio.Casino;

/**
 *
 * @author CAMILO
 */
public class FormPrePartido extends javax.swing.JFrame {
    
    /**
     * Creates new form PrePartido
     */
    Casino myCasino;
    boolean juegaCasa=false;
    public FormPrePartido(Casino myCasino) {
        initComponents();
        this.myCasino=myCasino;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnJugar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtJugador1 = new javax.swing.JTextField();
        txtJugador2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        boolJuegaCasa = new javax.swing.JRadioButton();
        cmbJuego = new javax.swing.JComboBox<>();
        btnRegistrarJugador = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtApuesta1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApuesta2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnJugar.setText("Jugar");
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugarActionPerformed(evt);
            }
        });

        jLabel1.setText("Cedula J1:");

        jLabel2.setText("Cedula J2:");

        boolJuegaCasa.setText("Crupier");
        boolJuegaCasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boolJuegaCasaActionPerformed(evt);
            }
        });

        cmbJuego.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blackjack", "Poker" }));
        cmbJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbJuegoActionPerformed(evt);
            }
        });

        btnRegistrarJugador.setText("Registrar jugadores");
        btnRegistrarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarJugadorActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jLabel3.setText("Apuesta J1:");

        jLabel4.setText("Apuesta J2:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApuesta1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtJugador2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApuesta2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(boolJuegaCasa))
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnJugar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistrarJugador)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boolJuegaCasa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtApuesta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtJugador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApuesta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(cmbJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnJugar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrarJugador)
                    .addComponent(btnVolver))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugarActionPerformed
    if(txtJugador2.getText().isEmpty()||txtJugador1.getText().isEmpty()||txtApuesta1.getText().isEmpty()||txtApuesta2.getText().isEmpty()){
        Ventana.imp("Error, llene todos los espacios", "Sistema");
        return;
    }
    
    if(boolJuegaCasa.isSelected()){
        txtJugador2.setText(myCasino.mostrarCrupierEncargado());
        txtApuesta2.setText(txtApuesta1.getText());
    }
    
    String cedula1 = txtJugador1.getText();
    String cedula2 = txtJugador2.getText();
    int apuesta1 = Integer.parseInt(txtApuesta1.getText());
    int apuesta2 = Integer.parseInt(txtApuesta2.getText());
    String juego = cmbJuego.getSelectedItem().toString();
    String salida=myCasino.nuevoPartido(cedula1, cedula2, apuesta1, apuesta2, juego, juegaCasa);
    Ventana.imp(salida, "Sistema");
    if(salida.equalsIgnoreCase("Partido entre 2 jugadores.")||salida.equalsIgnoreCase("Partido contra crupier.")){
        FormBlackJack blackjack = new FormBlackJack(myCasino);
        blackjack.setVisible(true);
        this.dispose();
    }
    if(salida.equalsIgnoreCase("La cedula 1 no corresponde a ningun jugador")){
        this.txtJugador1.setText("");
        this.txtApuesta1.setText("");
    }
    if(salida.equalsIgnoreCase("La cedula 2 no corresponde a ningun jugador")){
        this.txtJugador2.setText("");
        this.txtApuesta2.setText("");
    }
    
    /*
    if(!boolJuegaCasa.isSelected()){
    if (myCasino.noRepetirCedula(cedula1, cedula2).equalsIgnoreCase("La cedula del jugador 1 es igual a la del jugador 2")){
        Ventana.imp(myCasino.noRepetirCedula(cedula1, cedula2),"Sistema");
        limpiarTodo();
    } else if (cmbJuego.getSelectedItem().toString().equalsIgnoreCase("BlackJack")){
        if (myCasino.revisarJugadorRegistrado(cedula1)&&myCasino.revisarJugadorRegistrado(cedula2)){
            myCasino.nuevoPartido(cedula1, cedula2, apuesta1, apuesta2, juego, juegaCasa);
            FormBlackJack blackjack = new FormBlackJack(myCasino);
            blackjack.setVisible(true);
            this.dispose();
        } else if (!myCasino.revisarJugadorRegistrado(cedula1)^!myCasino.revisarJugadorRegistrado(cedula2)){
            if(!myCasino.revisarJugadorRegistrado(cedula1)){
                Ventana.imp("El jugador 1 no esta registrado", "Sistema");
            limpiarj1();
            }
            if(!myCasino.revisarJugadorRegistrado(cedula2)){
                Ventana.imp("El jugador 2 no esta registrado", "Sistema");
                limpiarj2();
            }
        } else if (!myCasino.revisarJugadorRegistrado(cedula1)&&!myCasino.revisarJugadorRegistrado(cedula2)){
           Ventana.imp("Ninguno esta registrado puej", "Sistema");
            limpiarTodo(); 
        }
    
    } else if (cmbJuego.getSelectedItem().toString().equalsIgnoreCase("Poker")){
        if (myCasino.revisarJugadorRegistrado(cedula1)&&myCasino.revisarJugadorRegistrado(cedula2)){
            FormPoker poker = new FormPoker();
            poker.setVisible(true);
            this.dispose();
        } else if (!myCasino.revisarJugadorRegistrado(cedula1)){
            Ventana.imp("El jugador 1 no esta registrado", "Sistema");
            limpiarj1();
        } else if (!myCasino.revisarJugadorRegistrado(cedula2)){
            Ventana.imp("El jugador 2 no esta registrado", "Sistema");
            limpiarj2();
        }
    }
    }
    
    else {
        
        if (myCasino.noRepetirCedula(cedula1, cedula2).equalsIgnoreCase("La cedula del jugador 1 es igual a la del jugador 2")){
        Ventana.imp("No ponga la misma cedula del crupier","Sistema");
        limpiarj1();
    } else if (cmbJuego.getSelectedItem().toString().equalsIgnoreCase("BlackJack")){
        if (myCasino.revisarJugadorRegistrado(cedula1)&&myCasino.revisarJugadorRegistrado(cedula2)){
            myCasino.nuevoPartido(cedula1, cedula2, apuesta1, apuesta2, juego, juegaCasa);
            FormBlackJack blackjack = new FormBlackJack(myCasino);
            blackjack.setVisible(true);
            this.dispose();
        } else if (!myCasino.revisarJugadorRegistrado(cedula1)){
            
                Ventana.imp("El jugador 1 no esta registrado", "Sistema");
                limpiarj1();
            
        }
    
    } else if (cmbJuego.getSelectedItem().toString().equalsIgnoreCase("Poker")){
        if (myCasino.revisarJugadorRegistrado(cedula1)&&myCasino.revisarJugadorRegistrado(cedula2)){
            FormPoker poker = new FormPoker();
            poker.setVisible(true);
            this.dispose();
        } else if (!myCasino.revisarJugadorRegistrado(cedula1)){
            Ventana.imp("El jugador 1 no esta registrado", "Sistema");
            limpiarj1();
        }
    }
    }
    */
    
    }//GEN-LAST:event_btnJugarActionPerformed
    private void limpiarj1(){
        txtJugador1.setText("");
        txtApuesta1.setText("");
    }
    public void limpiarj2(){
         txtJugador2.setText("");
        txtApuesta2.setText("");
    }
    private void limpiarTodo(){
        txtJugador1.setText("");
        txtApuesta1.setText("");
        txtJugador2.setText("");
        txtApuesta2.setText("");
    }
    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        FormCasinoEntrada entrada=new FormCasinoEntrada(myCasino);
        this.dispose();
        entrada.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnRegistrarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarJugadorActionPerformed
        FormRegistrarJugador registrar=new FormRegistrarJugador(myCasino);
        registrar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegistrarJugadorActionPerformed

    private void boolJuegaCasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boolJuegaCasaActionPerformed
        if (boolJuegaCasa.isSelected()){
            txtJugador2.setEnabled(false);
            txtJugador2.setText(myCasino.mostrarCrupierEncargado());
            txtApuesta2.setEnabled(false);
            txtApuesta2.setText("Iguala");
            juegaCasa = true;
        } else {
            txtJugador2.setEnabled(true);
            txtApuesta2.setEnabled(true);
            juegaCasa = false;
            limpiarj2();
        }
    }//GEN-LAST:event_boolJuegaCasaActionPerformed

    private void cmbJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbJuegoActionPerformed
        if(cmbJuego.getSelectedItem().toString().equalsIgnoreCase("Poker")){
            jLabel3.setText("Apuesta inicial J1:");
            jLabel4.setText("Apuesta Inicial J2:");
        } else if(cmbJuego.getSelectedItem().toString().equalsIgnoreCase("BlackJack")){
            jLabel3.setText("Apuesta J1:");
            jLabel4.setText("Apuesta J2:");
        }
    }//GEN-LAST:event_cmbJuegoActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton boolJuegaCasa;
    private javax.swing.JButton btnJugar;
    private javax.swing.JButton btnRegistrarJugador;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbJuego;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtApuesta1;
    private javax.swing.JTextField txtApuesta2;
    private javax.swing.JTextField txtJugador1;
    private javax.swing.JTextField txtJugador2;
    // End of variables declaration//GEN-END:variables
}
